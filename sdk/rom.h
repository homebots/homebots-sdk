#ifndef _ROM_
#define _ROM_

#include "c_types.h"

// SHA
typedef struct
{
  uint32_t state[5];
  uint32_t count[2];
  unsigned char buffer[64];
} sha1_context;

// 0x3fffc714
void flashchip();
// 0x3fffccf0
void Te0();
// 0x3fffd0f0
void rcons();
// 0x3fffd100
void Td0();
// 0x3fffd500
void Td4s();
// 0x3fffde10
void UartDev();
// 0x40000010
void _DebugExceptionVector();
// 0x40000020
void _NMIExceptionVector();
// 0x40000030
void _KernelExceptionVector();
// 0x40000050
void _UserExceptionVector();
// 0x40000070
void _DoubleExceptionVector();
// 0x40000080
void _ResetVector();
// 0x400000a4
void _ResetHandler();
// 0x4000042c
void _start();
// 0x40000454
void _xtos_set_exception_handler();
// 0x4000048c
void _xtos_l1int_handler();
// 0x4000056c
void _xtos_restore_intlevel();
// 0x40000574
void _xtos_set_vpri();
// 0x40000590
void _xtos_cause3_handler();
// 0x40000598
void _xtos_c_wrapper_handler();
// 0x400005f0
void srand();
// 0x40000600
void rand();
// 0x40000650
void __muldi3();
// 0x40000688
void xthal_bcopy();
// 0x400006c4
void xthal_memcpy();
// 0x4000074c
void xthal_copy123();
// 0x40000814
void cmd_parse();
// 0x4000091c
void get_first_seg();
// 0x40000a04
void remove_head_space();
// 0x40000a60
void convert_para_str();
// 0x40000b24
void conv_str_decimal();
// 0x40000cb8
void conv_str_hex();
// 0x40000dc0
void ets_set_idle_cb();
// 0x40000dd0
void ets_task();
// 0x40000e04
void ets_run();
// 0x40000e24
void ets_post();
// 0x40000f74
void ets_intr_lock();
// 0x40000f80
void ets_intr_unlock();
// 0x40000f88
void ets_isr_attach();
// 0x40000f98
void ets_isr_mask();
// 0x40000fa8
void ets_isr_unmask();
// 0x40000fbc
void ets_set_user_start();
// 0x40000fec
int main(void);
// 0x400018a4
void ets_memset();
// 0x400018b4
void ets_memcpy();
// 0x400018c4
void ets_memmove();
// 0x400018d4
void ets_memcmp();
// 0x40001998
void mem_init();
// 0x400019e0
void mem_free();
// 0x40001a14
void mem_trim();
// 0x40001b40
void mem_malloc();
// 0x40001c2c
void mem_calloc();
// 0x40001c58
void mem_zalloc();
// 0x40001c6c
void mem_realloc();
// 0x40001cb8
void eprintf_init_buf();
// 0x40001d14
void eprintf();
// 0x40001d48
void eprintf_to_host();
// 0x40001da0
void ets_write_char();
// 0x40001f00
void ets_vprintf();
// 0x4000242c
void ets_install_putc1(void (*p)(char c));
// 0x40002438
void ets_install_uart_printf();
// 0x40002450
void ets_install_external_printf();
// 0x4000248c
void ets_install_putc2();
// 0x40002494
void est_get_printf_buf_remain_len();
// 0x4000249c
void est_reset_printf_buf_len();
// 0x400024cc
void ets_printf(const char *format);
// 0x40002544
void ets_uart_printf();
// 0x40002578
void ets_external_printf();
// 0x400025e0
void rtc_get_reset_reason();
// 0x4000264c
void software_reset();
// 0x40002668
void rtc_set_sleep_mode();
// 0x4000269c
void dtm_params_init();
// 0x400026c8
void dtm_set_intr_mask();
// 0x400026d0
void dtm_get_intr_mask();
// 0x400026dc
void dtm_set_params();
// 0x400027a4
void save_rxbcn_mactime();
// 0x400027ac
void save_tsf_us();
// 0x400027b8
void ets_enter_sleep();
// 0x40002870
void rtc_enter_sleep();
// 0x400029ec
void rtc_intr_handler();
// 0x40002a40
void ets_rtc_int_register();
// 0x40002a88
void ets_strcpy();
// 0x40002a98
void ets_strncpy();
// 0x40002aa8
void ets_strcmp();
// 0x40002ab8
void ets_strncmp();
// 0x40002ac8
void ets_strlen();
// 0x40002ad8
void ets_strstr();
// 0x40002ae8
void ets_bzero(void *s, size_t n);
// 0x40002af8
void ets_str2macaddr();
// 0x40002b74
void ets_char2xdigit();
// 0x40002bcc
void ets_getc();
// 0x40002be8
void ets_putc();
// 0x40002c48
void ets_timer_setfn();
// 0x40002c64
void timer_insert();
// 0x40002cc4
void ets_timer_arm();
// 0x40002d40
void ets_timer_disarm();
// 0x40002d80
void ets_timer_done();
// 0x40002da8
void ets_timer_handler_isr();
// 0x40002e68
void ets_timer_init();
// 0x40002ecc
void ets_delay_us(uint16_t us);
// 0x40002f04
void ets_update_cpu_frequency();
// 0x40002f0c
void ets_get_cpu_frequency();
// 0x40002f34
void ets_wdt_get_mode();
// 0x40002fa0
void ets_wdt_enable();
// 0x400030f0
void ets_wdt_disable();
// 0x40003158
void ets_wdt_restore();
// 0x40003170
void ets_wdt_init();
// 0x400031b4
void roundup2();
// 0x400031c0
void multofup();
// 0x40003230
void UartConnCheck();
// 0x40003368
void UartDwnLdProc();
// 0x40003538
void FlashDwnLdStartMsgProc();
// 0x400035a0
void FilePacketSendReqMsgProc();
// 0x40003658
void FlashDwnLdStopReqMsgProc();
// 0x4000368c
void FlashDwnLdParamCfgMsgProc();
// 0x400036c4
void MemDwnLdStartMsgProc();
// 0x400036f0
void MemPacketSendReqMsgProc();
// 0x4000377c
void MemDwnLdStopReqMsgProc();
// 0x400037a0
void UartConnectProc();
// 0x400037ac
void UartRegWriteProc();
// 0x4000381c
void UartRegReadProc();
// 0x4000383c
void uartAttach();
// 0x400038a4
void uart_buff_switch();
// 0x40003924
void uart_baudrate_detect();
// 0x40003a14
void Uart_Init();
// 0x40003b30
void uart_tx_one_char();
// 0x40003b64
void uart_rx_one_char_block();
// 0x40003b8c
void uart_rx_one_char();
// 0x40003bbc
void uart_rx_intr_handler();
// 0x40003c30
void UartRxString();
// 0x40003c80
void send_packet();
// 0x40003cf4
void SendMsg();
// 0x40003d08
void recv_packet();
// 0x40003eac
void RcvMsg();
// 0x40003ec8
void uart_rx_readbuff();
// 0x40003ef4
void UartGetCmdLn();
// 0x40003f4c
void GetUartDevice();
// 0x40003f58
void SelectSpiFunction();
// 0x400043c8
void SPI_read_status();
// 0x40004400
void SPI_write_status();
// 0x4000443c
void SPI_write_enable();
// 0x4000448c
void Wait_SPI_Idle();
// 0x400044c0
void Enable_QMode();
// 0x40004644
void spi_flash_attach();
// 0x40004678
void Cache_Read_Enable();
// 0x400047f0
void Cache_Read_Disable();
// 0x40004878
void SPIUnlock();
// 0x400048a8
void SPILock();
// 0x400048ec
void SPIReadModeCnfig();
// 0x40004984
void SPIEraseChip();
// 0x400049b4
void SPIEraseBlock();
// 0x40004a00
void SPIEraseSector();
// 0x40004a4c
void SPIWrite();
// 0x40004b1c
void SPIRead();
// 0x40004b44
void SPIEraseArea();
// 0x40004c2c
void SPIParamCfg();
// 0x40004c50
void gpio_init(void);
// 0x40004cd0
void gpio_output_set(uint32 set_mask, uint32 clear_mask, uint32 enable_mask, uint32 disable_mask);
// 0x40004cf0
uint32 gpio_input_get(void);
// 0x40004d04
void gpio_register_set(uint32 reg_id, uint32 value);
// 0x40004d5c
uint32 gpio_register_get(uint32 reg_id);
// 0x40004d88
uint32 gpio_intr_pending(void);

typedef enum
{
  GPIO_PIN_INTR_DISABLE = 0,
  GPIO_PIN_INTR_POSEDGE = 1,
  GPIO_PIN_INTR_NEGEDGE = 2,
  GPIO_PIN_INTR_ANYEDGE = 3,
  GPIO_PIN_INTR_LOLEVEL = 4,
  GPIO_PIN_INTR_HILEVEL = 5
} GPIO_INT_TYPE;
// 0x40004d90
void gpio_pin_intr_state_set(uint32 i, GPIO_INT_TYPE intr_state);
// 0x40004dcc
void gpio_intr_ack(uint32 ack_mask);

typedef void (*gpio_intr_handler_fn_t)(uint32 intr_mask, void *arg);
// 0x40004e28
void gpio_intr_handler_register(gpio_intr_handler_fn_t fn, void *arg);
// 0x40004e90
void gpio_pin_wakeup_enable(uint32 i, GPIO_INT_TYPE intr_state);
// 0x40004ed4
void gpio_pin_wakeup_disable();
// 0x40004efc
void gpio_intr_test();
// 0x40004f40
void lldesc_build_chain();
// 0x40005050
void lldesc_num2link();
// 0x4000507c
void lldesc_set_owner();
// 0x400050fc
void sip_post();
// 0x40005180
void sip_alloc_to_host_evt();
// 0x40005234
void sip_to_host_evt_send_done();
// 0x400052c0
void sip_reclaim_tx_data_pkt();
// 0x4000534c
void sip_reclaim_from_host_cmd();
// 0x4000544c
void sip_install_rx_ctrl_cb();
// 0x4000545c
void sip_install_rx_data_cb();
// 0x40005668
void sip_get_state();
// 0x4000567c
void sip_init_attach();
// 0x400056c4
void sip_post_init();
// 0x40005808
void sip_send();
// 0x40005864
void sip_to_host_chain_append();
// 0x400058a8
void sip_get_ptr();
// 0x40005c1c
void slc_reattach();
// 0x40005c50
void slc_init_attach();
// 0x40005d90
void slc_enable();
// 0x40005db8
void slc_select_tohost_gpio_mode();
// 0x40005dc0
void slc_select_tohost_gpio();
// 0x40005de4
void slc_send_to_host_chain();
// 0x40005e94
void slc_from_host_chain_recycle();
// 0x40005f10
void slc_to_host_chain_recycle();
// 0x40005f24
void slc_from_host_chain_fetch();
// 0x40006014
void slc_pause_from_host();
// 0x4000603c
void slc_resume_from_host();
// 0x40006068
void slc_set_host_io_max_window();
// 0x4000608c
void slc_init_credit();
// 0x400060ac
void slc_add_credits();
// 0x400060c0
void rom_abs_temp();
// 0x400060d0
void rom_chip_v5_disable_cca();
// 0x400060ec
void rom_chip_v5_enable_cca();
// 0x4000610c
void rom_chip_v5_sense_backoff();
// 0x4000615c
void rom_dc_iq_est();
// 0x400061b8
void rom_en_pwdet();
// 0x40006238
void rom_get_bb_atten();
// 0x40006260
void rom_get_corr_power();
// 0x400062dc
void rom_get_fm_sar_dout();
// 0x40006394
void rom_get_noisefloor();
// 0x400063b0
void rom_get_power_db();
// 0x40006400
void rom_iq_est_disable();
// 0x40006430
void rom_iq_est_enable();
// 0x40006484
void rom_linear_to_db();
// 0x4000650c
void rom_set_txclk_en();
// 0x40006550
void rom_set_rxclk_en();
// 0x400065a4
void rom_mhz2ieee();
// 0x40006628
void rom_rxiq_get_mis();
// 0x40006738
void rom_sar_init();
// 0x4000678c
void rom_set_ana_inf_tx_scale();
// 0x400067c8
void rom_set_loopback_gain();
// 0x40006830
void rom_set_noise_floor();
// 0x40006874
void rom_start_noisefloor();
// 0x400068b4
void rom_start_tx_tone();
// 0x4000698c
void rom_stop_tx_tone();
// 0x40006a1c
void rom_txtone_linear_pwr();
// 0x40006a98
void rom_tx_mac_disable();
// 0x40006ad4
void rom_tx_mac_enable();
// 0x40006b08
void phy_get_romfuncs();
// 0x40006b10
void rom_ana_inf_gating_en();
// 0x40006c50
void rom_set_channel_freq();
// 0x40006f84
void rom_chip_50_set_channel();
// 0x4000711c
void rom_chip_v5_rx_init();
// 0x4000718c
void rom_chip_v5_tx_init();
// 0x40007268
void rom_i2c_readReg();
// 0x4000729c
void rom_i2c_readReg_Mask();
// 0x400072d8
void rom_i2c_writeReg();
// 0x4000730c
void rom_i2c_writeReg_Mask();
// 0x4000737c
void rom_pbus_debugmode();
// 0x40007410
void rom_pbus_enter_debugmode();
// 0x40007448
void rom_pbus_exit_debugmode();
// 0x4000747c
void rom_pbus_force_test();
// 0x400074d8
void rom_pbus_rd();
// 0x4000754c
void rom_pbus_set_rxgain();
// 0x40007610
void rom_pbus_set_txgain();
// 0x40007648
void rom_pbus_workmode();
// 0x40007688
void rom_pbus_xpd_rx_off();
// 0x400076cc
void rom_pbus_xpd_rx_on();
// 0x400076fc
void rom_pbus_xpd_tx_off();
// 0x40007740
void rom_pbus_xpd_tx_on();
// 0x400077a0
void rom_pbus_xpd_tx_on__low_gain();
// 0x40007804
void rom_phy_reset_req();
// 0x4000781c
void rom_restart_cal();
// 0x40007868
void rom_rfpll_reset();
// 0x400078dc
void rom_write_rfpll_sdm();
// 0x40007968
void rom_rfpll_set_freq();
// 0x40007a28
void rom_cal_tos_v50();
// 0x40007bf0
void rom_pbus_dco___SA2();
// 0x40007eb4
void rom_rfcal_pwrctrl();
// 0x4000804c
void rom_rfcal_rxiq();
// 0x40008264
void rom_rfcal_rxiq_set_reg();
// 0x40008388
void rom_rfcal_txcap();
// 0x40008610
void rom_rfcal_txiq();
// 0x400088b8
void rom_rfcal_txiq_cover();
// 0x40008a70
void rom_rfcal_txiq_set_reg();
// 0x40008b6c
void rom_rxiq_cover_mg_mp();
// 0x40008c6c
void rom_set_txbb_atten();
// 0x40008d34
void rom_set_txiq_cal();
// 0x40008dd0
void rijndaelKeySetupDec();
// 0x40008ea4
void aes_decrypt_init();
// 0x400092d4
void aes_decrypt();
// 0x400092e4
void aes_decrypt_deinit();
// 0x40009300
void rijndaelKeySetupEnc();
// 0x40009410
void aes_unwrap();
// 0x400094fc
unsigned char *base64_encode(const unsigned char *src, size_t len, size_t *out_len);
// 0x40009648
unsigned char *base64_decode(const unsigned char *src, size_t len, size_t *out_len);
// 0x400097ac
void md5_vector();

struct MD5Context
{
  uint32_t buf[4];
  uint32_t bits[2];
  uint8_t in[64];
};
// 0x40009818
void MD5Init(struct MD5Context *context);
// 0x40009834
void MD5Update(struct MD5Context *context, unsigned char const *buf, unsigned len);
// 0x40009900
void MD5Final(unsigned char digest[16], struct MD5Context *context);

// 0x4000a160
void hmac_md5_vector();
// 0x4000a2cc
void hmac_md5();
// 0x4000a2ec
void sha1_vector();
// 0x4000a364
void SHA1Transform(uint32_t state[5], const unsigned char buffer[64]);
// 0x4000b584
void SHA1Init(sha1_context *context);
// 0x4000b5a8
void SHA1Update(sha1_context *context, const unsigned char *data, uint32_t len);
// 0x4000b648
void SHA1Final(unsigned char digest[20], sha1_context *context);
// 0x4000b840
void pbkdf2_sha1();
// 0x4000b8b4
void hmac_sha1_vector();
// 0x4000ba28
void hmac_sha1();
// 0x4000ba48
void sha1_prf();
// 0x4000bb3c
void wepkey_64();
// 0x4000bc40
void wepkey_128();
// 0x4000bd28
void _xtos_set_interrupt_handler_arg();
// 0x4000bd70
void _xtos_set_interrupt_handler();
// 0x4000bd84
void _xtos_ints_on();
// 0x4000bda4
void _xtos_ints_off();
// 0x4000bdc8
void strcmp();
// 0x4000bec8
void strcpy();
// 0x4000bf4c
void strlen();
// 0x4000bfa8
void strncmp();
// 0x4000c0a0
void strncpy();
// 0x4000c180
void __addsf3();
// 0x4000c268
void __subsf3();
// 0x4000c3dc
void __mulsf3();
// 0x4000c4c4
void __fixunssfsi();
// 0x4000c538
void __adddf3();
// 0x4000c688
void __subdf3();
// 0x4000c8f0
void __muldf3();
// 0x4000cb94
void __divdf3();
// 0x4000ccb8
void __fixdfsi();
// 0x4000cd00
void __fixunsdfsi();
// 0x4000cd5c
void __truncdfsf2();
// 0x4000cdfc
void __extendsfdf2();
// 0x4000ce60
void __divdi3();
// 0x4000d310
void __udivdi3();
// 0x4000d770
void __umoddi3();
// 0x4000dbe0
void _xtos_alloca_handler();
// 0x4000dbe4
void _xtos_syscall_handler();
// 0x4000dbf8
void _xtos_p_none();
// 0x4000dbfc
void _xtos_set_intlevel();
// 0x4000dc18
void _xtos_set_min_intlevel();
// 0x4000dc3c
void _xtos_unhandled_interrupt();
// 0x4000dc44
void _xtos_unhandled_exception();
// 0x4000dc54
void _xtos_return_from_exc();
// 0x4000dc88
void __divsi3();
// 0x4000dcf0
void __umulsidi3();
// 0x4000dd38
void xthal_get_ccount();
// 0x4000dd40
void xthal_set_ccompare();
// 0x4000dd4c
void xthal_get_ccompare();
// 0x4000dd58
void xthal_get_intread();
// 0x4000dd58
void xthal_get_interrupt();
// 0x4000dd60
void xthal_set_intclear();
// 0x4000dd68
void rc4_skip();
// 0x4000de84
void bzero();
// 0x4000dea8
void memcmp();
// 0x4000df48
void memcpy();
// 0x4000e04c
void memmove();
// 0x4000e190
void memset();
// 0x4000e1e0
void strstr();
// 0x4000e21c
void __udivsi3();
// 0x4000e268
void __umodsi3();
// 0x4000e2a4
void __floatunsisf();
// 0x4000e2ac
void __floatsisf();
// 0x4000e2e8
void __floatunsidf();
// 0x4000e2f0
void __floatsidf();
// 0x4000e320
void xthal_window_spill_nw();
// 0x4000e320
void xthal_spill_registers_into_stack_nw();
// 0x4000e324
void xthal_window_spill();
// 0x4000e328
void _rom_store_table();
// 0x4000e388
void _rom_store();

#endif
